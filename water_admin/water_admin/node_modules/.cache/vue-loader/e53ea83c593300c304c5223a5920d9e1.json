{"remainingRequest":"F:\\waterManager\\water_admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\waterManager\\water_admin\\src\\components\\page\\waterSpeed.vue?vue&type=style&index=0&id=ea8409e0&lang=less&scoped=true&","dependencies":[{"path":"F:\\waterManager\\water_admin\\src\\components\\page\\waterSpeed.vue","mtime":1652176250695},{"path":"F:\\waterManager\\water_admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\waterManager\\water_admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\waterManager\\water_admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\waterManager\\water_admin\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\waterManager\\water_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\waterManager\\water_admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50aXRsZSB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBsZWZ0OiAyMHB4OwogICAgdG9wOiAyMHB4OwogICAgei1pbmRleDogMTA7CiAgICBjb2xvcjogd2hpdGU7CgogICAgLnRpdGxlLWljb24gewogICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4OwogICAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIH0KfQo="},{"version":3,"sources":["waterSpeed.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"waterSpeed.vue","sourceRoot":"src/components/page","sourcesContent":["<!--\r\n * @Author: Tashany\r\n * @Date: 2022-04-14 15:36:04\r\n * @LastEditors: Tashany\r\n * @LastEditTime: 2022-05-10 17:50:50\r\n * @Description: file content\r\n * @FilePath: \\water_admin\\src\\components\\page\\waterSpeed.vue\r\n-->\r\n<template>\r\n    <div class=\"com-container\">\r\n        <div class=\"com-chart\" ref=\"waterSpeed\">\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {\r\n        getConnect\r\n    } from '@/api/user.js'\r\n    export default {\r\n        data() {\r\n            return {\r\n                chartInstance: null,\r\n                // 返回服务器的数据\r\n                allData: null,\r\n                timerId: null\r\n            }\r\n        },\r\n        created() {\r\n            // 再组件创建完成时创建回调函数\r\n            this.$socket.registerCallBack(\"waterSpeed\", this.getData)\r\n        },\r\n        mounted() {\r\n            this.initChart()\r\n            this.getData()\r\n            window.addEventListener('resize', this.screenAdapter)\r\n            this.screenAdapter()\r\n            // getConnect()\r\n        },\r\n        destroyed() {\r\n            window.removeEventListener('resize', this.screenAdapter)\r\n            // 销毁时取消回调函数\r\n            this.$socket.unRegisterCallBack(this.getData)\r\n        },\r\n        computed: {\r\n            // 设置给标题的样式\r\n            comStyle() {\r\n                return {\r\n                    fontSize: this.titleFontSize + 'px'\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            // 初始化echartInstance对象\r\n            initChart() {\r\n                this.chartInstance = this.$echarts.init(this.$refs.waterSpeed, 'chalk')\r\n                const initOption = {\r\n                    series: [{\r\n                        type: 'gauge',\r\n                        axisLine: {\r\n                            lineStyle: {\r\n                                width: 10,\r\n                                color: [\r\n                                    [0.3, '#67e0e3'],\r\n                                    [0.7, '#37a2da'],\r\n                                    [1, '#fd666d']\r\n                                ]\r\n                            }\r\n                        },\r\n                        radius: \"100%\",\r\n\r\n                        startAngle: 225, // 仪表盘起始角度,默认 225。圆心 正右手侧为0度，正上方为90度，正左手侧为180度。\r\n                        pointer: {\r\n                            itemStyle: {\r\n                                color: 'auto'\r\n                            }\r\n                        },\r\n                        axisTick: {\r\n                            distance: -30,\r\n                            length: 8,\r\n                            lineStyle: {\r\n                                color: '#fff',\r\n                                width: 2\r\n                            },\r\n                            splitNumber: 10, // 分隔线之间分割的刻度数,默认 5。\r\n                        },\r\n                        splitLine: {\r\n                            distance: -30,\r\n                            length: 30,\r\n                            lineStyle: {\r\n                                color: '#fff',\r\n                                width: 4\r\n                            }\r\n                        },\r\n                        // 刻度值数字的大小\r\n                        axisLabel: {\r\n                            color: 'auto',\r\n                            distance: 5,\r\n                            fontSize: 10\r\n                        },\r\n                        data: [{\r\n                            value: 70\r\n                        }],\r\n                        // 仪表盘详情，用于显示数据。\r\n                        detail: {\r\n                            textStyle: {\r\n                                fontSize: 9\r\n                            },\r\n                            ffsetCenter: [0,\r\n                                \"100%\"\r\n                            ], // 相对于仪表盘中心的偏移位置，数组第一项是水平方向的偏移，第二项是垂直方向的偏移。可以是绝对的数值，也可以是相对于仪表盘半径的百分比。\r\n                        }\r\n                    }]\r\n                }\r\n                this.chartInstance.setOption(initOption)\r\n            },\r\n            // 获取服务器数据\r\n            getData(ret) {\r\n                this.allData = JSON.parse(ret)\r\n                this.updateChart()\r\n            },\r\n            // 更新图表\r\n            updateChart() {\r\n                const a = this.allData.waterSpeed[this.allData.waterSpeed.length-1]*60\r\n                console.log(\"edad \"+ a)\r\n                const option = {\r\n                    series: [{\r\n                        detail: {\r\n                            valueAnimation: true,\r\n                            formatter: '{value} mm/min',\r\n                            color: 'auto'\r\n                        },\r\n                        data : [{a}]\r\n                    }]\r\n                }\r\n                this.chartInstance.setOption(option)\r\n            },\r\n            // 屏幕大小适配 图标自适应\r\n            screenAdapter() {\r\n                // 得到图标容器宽度-》获取字体大小\r\n                this.titleFontSize = (this.$refs.waterSpeed.offsetWidth / 100) * 3.6\r\n                const adapterOption = {\r\n                    legend: {\r\n                        itemWidth: this.titleFontSize,\r\n                        itemHeight: this.titleFontSize,\r\n                        itemGap: this.titleFontSize,\r\n                        textStyle: {\r\n                            fontSize: this.titleFontSize / 2\r\n                        }\r\n                    }\r\n                }\r\n                this.chartInstance.setOption(adapterOption)\r\n                this.chartInstance.resize()\r\n            },\r\n\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    .title {\r\n        position: absolute;\r\n        left: 20px;\r\n        top: 20px;\r\n        z-index: 10;\r\n        color: white;\r\n\r\n        .title-icon {\r\n            margin-left: 10px;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n</style>"]}]}