{"remainingRequest":"F:\\waterManager\\water_admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\waterManager\\water_admin\\src\\components\\page\\acceleration.vue?vue&type=style&index=0&id=d9d477c0&lang=less&scoped=true&","dependencies":[{"path":"F:\\waterManager\\water_admin\\src\\components\\page\\acceleration.vue","mtime":1650957863401},{"path":"F:\\waterManager\\water_admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\waterManager\\water_admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\waterManager\\water_admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\waterManager\\water_admin\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\waterManager\\water_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\waterManager\\water_admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50aXRsZSB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGxlZnQ6IDIwcHg7CiAgdG9wOiAyMHB4OwogIHotaW5kZXg6IDEwOwogIGNvbG9yOiB3aGl0ZTsKCiAgLnRpdGxlLWljb24gewogICAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgfQp9Cg=="},{"version":3,"sources":["acceleration.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqLA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"acceleration.vue","sourceRoot":"src/components/page","sourcesContent":["<!--\r\n * @Author: Tashany\r\n * @Date: 2022-04-13 17:19:24\r\n * @LastEditors: Tashany\r\n * @LastEditTime: 2022-04-26 15:24:23\r\n * @Description: file content\r\n * @FilePath: \\water_admin\\src\\components\\page\\acceleration.vue\r\n-->\r\n<template>\r\n  <div class=\"com-container\">\r\n      <div class=\"title\" :style=\"comStyle\">\r\n        <span>▎水位加速度变化</span>\r\n        <span class=\"iconfont title-icon\"></span>\r\n      </div>\r\n      <div class=\"com-chart\" ref=\"waterAcceleration\"> \r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        chartInstance: null,\r\n        // 返回服务器的数据\r\n        allData: null,\r\n        currentPage: 1, //当前页数\r\n        totalPage: 0, //总页数\r\n        timerId: null, // 定时器标识,\r\n        showChoice: false,\r\n        type: 'line',\r\n        titleFontSize: null,//指明标题字体大小\r\n        xData:null,\r\n        yData:null\r\n      }\r\n    },\r\n     created() {\r\n      // 再组件创建完成时创建回调函数\r\n      this.$socket.registerCallBack('acceleration',this.getData)\r\n    },\r\n    mounted() {\r\n      this.initChart()\r\n      // this.getData()\r\n      window.addEventListener('resize', this.screenAdapter)\r\n      this.screenAdapter()\r\n      // getConnect()\r\n    },\r\n    destroyed() {\r\n      window.removeEventListener('resize', this.screenAdapter)\r\n       // 销毁时取消回调函数\r\n      this.$socket.unRegisterCallBack(this.getData)\r\n    },\r\n    computed: {\r\n      // 设置给标题的样式\r\n      comStyle() {\r\n        return {\r\n          fontSize: this.titleFontSize + 'px'\r\n        }\r\n\r\n      }\r\n    },\r\n    methods: {\r\n      // 初始化echartInstance对象\r\n      initChart() {\r\n        this.chartInstance = this.$echarts.init(this.$refs.waterAcceleration, 'chalk')\r\n        const initOption = {\r\n          // 设置直接坐标系坐标轴大写\r\n          grid: {\r\n            left: '3%',\r\n            top: '35%',\r\n            right: '4%',\r\n            bottom: '1%',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            // 取消间隙\r\n            type: 'category',\r\n            // boundaryGap: false\r\n          },\r\n          yAxis: {\r\n\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          }\r\n        }\r\n        this.chartInstance.setOption(initOption)\r\n      },\r\n      // 获取服务器数据\r\n      getData(ret) {\r\n        console.log(333)\r\n        this.allData = JSON.parse(ret)\r\n        this.updateChart()\r\n      },\r\n      // 更新图表\r\n      updateChart() {\r\n         this.yData = this.allData.waterAcceleration.map(item =>{\r\n          return item\r\n        })\r\n         this.xData = this.allData.measureTime.map(item => {\r\n          return item.split(\" \")[1]\r\n        })\r\n        /*数组排序*/\r\n        this.xData.sort();\r\n        const option = {\r\n          //图例名\r\n          legend: {\r\n            data: ['水位加速度']\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: this.xData,\r\n            axisLabel: {\r\n              interval: 0,\r\n              fontSize:'10'\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'value',\r\n            areaStyle: {}\r\n          },\r\n\r\n          series: [{\r\n            type: this.type,\r\n            data: this.yData,\r\n            smooth: true,\r\n            showSymbol: true,\r\n            symbol: 'circle', //设定为实心点\r\n            symbolSize: 5, //设定实心点的大小\r\n            markPoint: { //显示一定区域内的最大值和最小值\r\n              data: [{\r\n                  type: 'max',\r\n                  name: '最大值'\r\n                },\r\n                {\r\n                  type: 'min',\r\n                  name: '最小值'\r\n                }\r\n              ]\r\n            },\r\n            areaStyle: {\r\n              // 从上往下的渐变颜色\r\n              color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: '#00E2FF'\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: '#0063BF'\r\n                }\r\n              ])\r\n            },\r\n\r\n          }],\r\n        }\r\n        this.chartInstance.setOption(option)\r\n      },\r\n      // 屏幕大小适配 图标自适应\r\n      screenAdapter() {\r\n        // 得到图标容器宽度-》获取字体大小\r\n        this.titleFontSize = (this.$refs.waterAcceleration.offsetWidth / 100) * 3.6\r\n        const adapterOption = {\r\n          legend: {\r\n            itemWidth: this.titleFontSize,\r\n            itemHeight: this.titleFontSize,\r\n            itemGap: this.titleFontSize,\r\n            textStyle: {\r\n              fontSize: this.titleFontSize / 2\r\n            }\r\n          }\r\n        }\r\n        this.chartInstance.setOption(adapterOption)\r\n        this.chartInstance.resize()\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .title {\r\n    position: absolute;\r\n    left: 20px;\r\n    top: 20px;\r\n    z-index: 10;\r\n    color: white;\r\n\r\n    .title-icon {\r\n      margin-left: 10px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n</style>"]}]}