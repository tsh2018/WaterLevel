{"remainingRequest":"F:\\waterManager\\water_admin\\node_modules\\babel-loader\\lib\\index.js!F:\\waterManager\\water_admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!F:\\waterManager\\water_admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\waterManager\\water_admin\\src\\components\\page\\speed.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\waterManager\\water_admin\\src\\components\\page\\speed.vue","mtime":1649843807790},{"path":"F:\\waterManager\\water_admin\\babel.config.js","mtime":1646632679840},{"path":"F:\\waterManager\\water_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\waterManager\\water_admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\waterManager\\water_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\waterManager\\water_admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydEluc3RhbmNlOiBudWxsLAogICAgICAvLyDov5Tlm57mnI3liqHlmajnmoTmlbDmja4KICAgICAgYWxsRGF0YTogbnVsbCwKICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgIC8v5b2T5YmN6aG15pWwCiAgICAgIHRvdGFsUGFnZTogMCwKICAgICAgLy/mgLvpobXmlbAKICAgICAgdGltZXJJZDogbnVsbCwKICAgICAgLy8g5a6a5pe25Zmo5qCH6K+GLAogICAgICBzaG93Q2hvaWNlOiBmYWxzZSwKICAgICAgLy/mmK/lkKbmmL7npLrlj6/pgInpobkKICAgICAgdHlwZTogJ2xpbmUnLAogICAgICB0aXRsZUZvbnRTaXplOiBudWxsIC8v5oyH5piO5qCH6aKY5a2X5L2T5aSn5bCPCgogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXRDaGFydCgpOwogICAgdGhpcy5nZXREYXRhKCk7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zY3JlZW5BZGFwdGVyKTsKICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpOwogIH0sCiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQoKSB7CiAgICBjbGVhckludGVydmFsKHRoaXMudGltZXJJZCk7CiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zY3JlZW5BZGFwdGVyKTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICAvLyDorr7nva7nu5nmoIfpopjnmoTmoLflvI8KICAgIGNvbVN0eWxlOiBmdW5jdGlvbiBjb21TdHlsZSgpIHsKICAgICAgZm9udFNpemU6IHRoaXMudGl0bGVGb250U2l6ZSArICdweCc7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDliJ3lp4vljJZlY2hhcnRJbnN0YW5jZeWvueixoQogICAgaW5pdENoYXJ0OiBmdW5jdGlvbiBpbml0Q2hhcnQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2UgPSB0aGlzLiRlY2hhcnRzLmluaXQodGhpcy4kcmVmcy53YXRlclNwZWVkLCAnY2hhbGsnKTsKICAgICAgdmFyIGluaXRPcHRpb24gPSB7CiAgICAgICAgLy8g6K6+572u55u05o6l5Z2Q5qCH57O75Z2Q5qCH6L205aSn5YaZCiAgICAgICAgZ3JpZDogewogICAgICAgICAgbGVmdDogJzMlJywKICAgICAgICAgIHRvcDogJzM1JScsCiAgICAgICAgICByaWdodDogJzQlJywKICAgICAgICAgIGJvdHRvbTogJzElJywKICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIC8vIOWPlua2iOmXtOmamQogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgIGJvdW5kYXJ5R2FwOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHt9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJwogICAgICAgIH0KICAgICAgfTsgLy8g5a+55Zu+5YOP6L+b6KGM6byg5qCH5LqL5Lu255qE55uR5ZCsCgogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uub24oJ21vdXNlb3ZlcicsIGZ1bmN0aW9uICgpIHsKICAgICAgICBjbGVhckludGVydmFsKF90aGlzLnRpbWVySWQpOwogICAgICB9KTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLm9uKCdtb3VzZW91dCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5zdGFydEludGVyY3ZhbCgpOwogICAgICB9KTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihpbml0T3B0aW9uKTsKICAgIH0sCiAgICAvLyDojrflj5bmnI3liqHlmajmlbDmja4KICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEoKSB7CiAgICAgIC8vIGh0dHA6Ly8xMjcuMC4wLjEuODA4Mi9hcGkvd2F0ZXJTcGVlZAogICAgICAvL+iOt+WPluaVsOaNruS7o+eggQogICAgICBjb25zb2xlLmxvZygn6I635Y+W5pWw5o2uJyk7CiAgICAgIC8q5pWw5o2u5o6S5bqPKi8KICAgICAgLy8gdGhpcy5hbGxEYXRhLnNvcnQoKGEsYik9PnsKICAgICAgLy8gICByZXR1cm4gYS52YWx1ZS1iLXZhbHVlIC8v5LuO5bCP5Yiw5aSn5o6S5bqPCiAgICAgIC8vIH0pCiAgICAgIC8vIAogICAgICAvLyB0aGlzLnRvdGFsUGFnZSA9IHRoaXMuYWxsRGF0YS5sZW5ndGggJSA1ID09PSAwID8gdGhpcy5hbGxEYXRhLmxlbmd0aCAvIDUgOiB0aGlzLmFsbERhdGEubGVuZ3RoIC8gNSArIDEgCiAgICAgIC8v5ZCv5Yqo5a6a5pe25ZmoIOiHquWKqOe/u+mhtQoKICAgICAgdGhpcy5zdGFydEludGVyY3ZhbCgpOwogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCk7CiAgICB9LAogICAgLy8g5pu05paw5Zu+6KGoCiAgICB1cGRhdGVDaGFydDogZnVuY3Rpb24gdXBkYXRlQ2hhcnQoKSB7CiAgICAgIC8vIOWNiumAj+aYjueahOminOiJsuWAvAogICAgICAvLyBjb25zdCBjb2xvckFycjEgPSBbCiAgICAgIC8vICAgJ3JnYmEoMTEsIDE2OCwgNDQsIDAuNSknLAogICAgICAvLyAgICdyZ2JhKDQ0LCAxMTAsIDI1NSwgMC41KScsCiAgICAgIC8vICAgJ3JnYmEoMjIsIDI0MiwgMjE3LCAwLjUpJywKICAgICAgLy8gICAncmdiYSgyNTQsIDMzLCAzMCwgMC41KScsCiAgICAgIC8vICAgJ3JnYmEoMjUwLCAxMDUsIDAsIDAuNSknCiAgICAgIC8vIF0KICAgICAgLy8g5YWo6YCP5piO55qE6aKc6Imy5YC8CiAgICAgIC8vIGNvbnN0IGNvbG9yQXJyMiA9IFsKICAgICAgLy8gICAncmdiYSgxMSwgMTY4LCA0NCwgMCknLAogICAgICAvLyAgICdyZ2JhKDQ0LCAxMTAsIDI1NSwgMCknLAogICAgICAvLyAgICdyZ2JhKDIyLCAyNDIsIDIxNywgMCknLAogICAgICAvLyAgICdyZ2JhKDI1NCwgMzMsIDMwLCAwKScsCiAgICAgIC8vICAgJ3JnYmEoMjUwLCAxMDUsIDAsIDApJwogICAgICAvLyBdCgogICAgICAvKiDlvaLmiJDmlbDnu4QqLwogICAgICAvLyBjb25zdCBjYXRlZ29yeSA9IHRoaXMuYWxsRGF0YS5tYXAoKCk9PnsKICAgICAgLy8gICByZXR1cm4gCiAgICAgIC8vIH0pCgogICAgICAvKuavj+S6lOS4quWFg+e0oOaYvuekuuS4gOmhtSovCiAgICAgIC8vIGNvbnN0IHN0YXJ0ID0gKHRoaXMuY3VycmVudFBhZ2UtMSkqNQogICAgICAvLyBjb25zdCBlbmQgPSB0aGlzLmN1cnJlbnRQYWdlICogNQogICAgICAvLyBjb25zdCBzaG93RGF0YSA9IHRoaXMuYWxsRGF0YS5zbGljZShzdGFydCwgZW5kKQogICAgICB2YXIgeURhdGEgPSBbJzEwMCcsICcyMDAnLCAnMzAwJywgJzQwMCcsICc2MDAnLCAnNDAwJywgJzEwMCcsICczMDAnLCAnOTAwJywgJzYwMCddOwogICAgICB2YXIgeERhdGEgPSBbJzNzJywgJzJzJywgJzFzJywgJzRzJywgJzVzJywgJzNzJywgJzJzJywgJzFzJywgJzRzJywgJzVzJ107CiAgICAgIC8q5pWw57uE5o6S5bqPKi8KCiAgICAgIHhEYXRhLnNvcnQoKTsKICAgICAgLyrliIbpobUqLwoKICAgICAgdGhpcy50b3RhbFBhZ2UgPSB5RGF0YSAlIDUgPT09IDAgPyB5RGF0YS5sZW5ndGggLyA1IDogeURhdGEubGVuZ3RoIC8gNSArIDE7CiAgICAgIHZhciBzdGFydCA9ICh0aGlzLmN1cnJlbnRQYWdlIC0gMSkgKiA1OwogICAgICB2YXIgZW5kID0gdGhpcy5jdXJyZW50UGFnZSAqIDU7CiAgICAgIHZhciBzaG93eURhdGEgPSB5RGF0YS5zbGljZShzdGFydCwgZW5kKTsKICAgICAgdmFyIHNob3d4RGF0YSA9IHhEYXRhLnNsaWNlKHN0YXJ0LCBlbmQpOyAvLyDlm77kvovmlbDmja4g5pWw57uECiAgICAgIC8vIGNvbnN0IGxlZ2VuZEFyciA9IHZhbHVlQXJyLm1hcChpdGVtID0+ewogICAgICAvLyAgIHJldHVybiBpdGVtLm5hbWUKICAgICAgLy8gfSkKCiAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICBkYXRhOiBzaG93eERhdGEKICAgICAgICB9LAogICAgICAgIHlBeGlzOiB7CiAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgYXJlYVN0eWxlOiB7fQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgdHlwZTogdGhpcy50eXBlLAogICAgICAgICAgZGF0YTogc2hvd3lEYXRhLAogICAgICAgICAgc21vb3RoOiB0cnVlLAogICAgICAgICAgYXJlYVN0eWxlOiB7CiAgICAgICAgICAgIC8vIOS7juS4iuW+gOS4i+eahOa4kOWPmOminOiJsgogICAgICAgICAgICBjb2xvcjogbmV3IHRoaXMuJGVjaGFydHMuZ3JhcGhpYy5MaW5lYXJHcmFkaWVudCgwLCAwLCAwLCAxLCBbewogICAgICAgICAgICAgIG9mZnNldDogMCwKICAgICAgICAgICAgICBjb2xvcjogJyMwMEUyRkYnCiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICBvZmZzZXQ6IDEsCiAgICAgICAgICAgICAgY29sb3I6ICcjMDA2M0JGJwogICAgICAgICAgICB9XSkKICAgICAgICAgIH0KICAgICAgICB9XSAvLyBsZWdlbmQ6ewogICAgICAgIC8vICAgZGF0YTpbJ+awtOS9jeWPmOWMlumAn+W6piddCiAgICAgICAgLy8gfQoKICAgICAgfTsKICAgICAgY29uc29sZS5sb2coMSk7CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24ob3B0aW9uKTsKICAgICAgY29uc29sZS5sb2coMik7CiAgICB9LAogICAgLy8g57+76aG1CiAgICBzdGFydEludGVyY3ZhbDogZnVuY3Rpb24gc3RhcnRJbnRlcmN2YWwoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMudGltZXJJZCkgewogICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcklkKTsKICAgICAgfQoKICAgICAgdGhpcy50aW1lcklkID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi5jdXJyZW50UGFnZSsrOwoKICAgICAgICBpZiAoX3RoaXMyLmN1cnJlbnRQYWdlID49IF90aGlzMi50b3RhbFBhZ2UpIHsKICAgICAgICAgIF90aGlzMi5jdXJyZW50UGFnZSA9IDE7CiAgICAgICAgfQoKICAgICAgICBfdGhpczIudXBkYXRlQ2hhcnQoKTsKICAgICAgfSwgMzAwMCk7CiAgICB9LAogICAgLy8g5bGP5bmV5aSn5bCP6YCC6YWNIOWbvuagh+iHqumAguW6lAogICAgc2NyZWVuQWRhcHRlcjogZnVuY3Rpb24gc2NyZWVuQWRhcHRlcigpIHsKICAgICAgLy8g5b6X5Yiw5Zu+5qCH5a655Zmo5a695bqmLeOAi+iOt+WPluWtl+S9k+Wkp+WwjwogICAgICB0aGlzLnRpdGxlRm9udFNpemUgPSB0aGlzLiRyZWZzLndhdGVyU3BlZWQub2Zmc2V0V2lkdGggLyAxMDAgKiAzLjY7CiAgICAgIHZhciBhZGFwdGVyT3B0aW9uID0gewogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgaXRlbVdpZHRoOiB0aGlzLnRpdGxlRm9udFNpemUsCiAgICAgICAgICBpdGVtSGVpZ2h0OiB0aGlzLnRpdGxlRm9udFNpemUsCiAgICAgICAgICBpdGVtR2FwOiB0aGlzLnRpdGxlRm9udFNpemUsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IHRoaXMudGl0bGVGb250U2l6ZSAvIDIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH07CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oYWRhcHRlck9wdGlvbik7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACAA,MADA,kBACA;AACA;AACAC,yBADA;AAEA;AACAC,mBAHA;AAIAC,oBAJA;AAIA;AACAC,kBALA;AAKA;AACAC,mBANA;AAMA;AACAC,uBAPA;AAOA;AACAC,kBARA;AASAC,yBATA,CASA;;AATA;AAWA,GAbA;AAcAC,SAdA,qBAcA;AACA;AACA;AACAC;AACA;AACA,GAnBA;AAoBAC,WApBA,uBAoBA;AACAC;AACAF;AACA,GAvBA;AAwBAG;AACA;AACAC,YAFA,sBAEA;AACAC;AACA;AAJA,GAxBA;AA8BAC;AACA;AACAC,aAFA,uBAEA;AAAA;;AACA;AACA;AACA;AACAC;AACAC,oBADA;AAEAC,oBAFA;AAGAC,qBAHA;AAIAC,sBAJA;AAKAC;AALA,SAFA;AASAC;AACA;AACAjB,0BAFA;AAGAkB;AAHA,SATA;AAcAC,iBAdA;AAiBAC;AACAC;AADA;AAjBA,QAFA,CAuBA;;AACA;AACAhB;AACA,OAFA;AAGA;AACA;AACA,OAFA;AAGA;AACA,KAjCA;AAkCA;AACAiB,WAnCA,qBAmCA;AACA;AACA;AACAC;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA;AAEA;AACA,KAnDA;AAoDA;AACAC,eArDA,yBAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACAC;AACA;;AACA;AACA;AACA;AACA;AACA,8CApCA,CAsCA;AACA;AACA;AACA;;AAEA;AACAR;AACAjB,0BADA;AAEAP;AAFA,SADA;AAKA0B;AACAnB,uBADA;AAEA0B;AAFA,SALA;AASAC;AACA3B,yBADA;AAEAP,yBAFA;AAGAmC,sBAHA;AAIAF;AACA;AACAG;AACAC,uBADA;AAEAD;AAFA,eAIA;AACAC,uBADA;AAEAD;AAFA,aAJA;AAFA;AAJA,UATA,CA6BA;AACA;AACA;;AA/BA;AAiCAN;AACA;AACAA;AACA,KApIA;AAqIA;AACAQ,kBAtIA,4BAsIA;AAAA;;AACA;AACA1B;AACA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,OANA,EAMA,IANA;AAOA,KAjJA;AAkJA;AACA2B,iBAnJA,2BAmJA;AACA;AACA;AACA;AACAC;AACAC,uCADA;AAEAC,wCAFA;AAGAC,qCAHA;AAIAC;AACA7B;AADA;AAJA;AADA;AAUA;AAEA;AAlKA;AA9BA","names":["data","chartInstance","allData","currentPage","totalPage","timerId","showChoice","type","titleFontSize","mounted","window","destroyed","clearInterval","computed","comStyle","fontSize","methods","initChart","grid","left","top","right","bottom","containLabel","xAxis","boundaryGap","yAxis","tooltip","trigger","getData","console","updateChart","xData","areaStyle","series","smooth","color","offset","startIntercval","screenAdapter","legend","itemWidth","itemHeight","itemGap","textStyle"],"sourceRoot":"src/components/page","sources":["speed.vue"],"sourcesContent":["<!--\r\n * @Author: Tashany\r\n * @Date: 2022-04-06 21:54:21\r\n * @LastEditors: Tashany\r\n * @LastEditTime: 2022-04-13 17:56:47\r\n * @Description: 水位变化速度\r\n * @FilePath: \\water_admin\\src\\components\\page\\speed.vue\r\n-->\r\n<template>\r\n  <div class=\"com-container\">\r\n    <div class=\"title\" :style=\"comStyle\">\r\n      <span>水位速度变化</span>\r\n      <span class=\"iconfont title-icon\" @click=\"showChoice = !showChoice\">&#xe6eb;</span>\r\n      <div class=\"select-con\" v-show=\"showChoice\">\r\n        <div class=\"select-item\" @click=\"type='bar'\">我是标题选择一</div>\r\n        <div class=\"select-item\">我是标题选择二</div>\r\n        <div class=\"select-item\">我是标题选择三</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"com-chart\" ref=\"waterSpeed\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        chartInstance: null,\r\n        // 返回服务器的数据\r\n        allData: null,\r\n        currentPage: 1, //当前页数\r\n        totalPage: 0, //总页数\r\n        timerId: null,// 定时器标识,\r\n        showChoice:false,//是否显示可选项\r\n        type:'line',\r\n        titleFontSize:null//指明标题字体大小\r\n      }\r\n    },\r\n    mounted() {\r\n      this.initChart()\r\n      this.getData()\r\n      window.addEventListener('resize', this.screenAdapter)\r\n      this.screenAdapter()\r\n    },\r\n    destroyed() {\r\n      clearInterval(this.timerId)\r\n      window.removeEventListener('resize', this.screenAdapter)\r\n    },\r\n    computed:{\r\n      // 设置给标题的样式\r\n      comStyle(){\r\n        fontSize: this.titleFontSize+'px'\r\n      }\r\n    },\r\n    methods: {\r\n      // 初始化echartInstance对象\r\n      initChart() {\r\n        this.chartInstance = this.$echarts.init(this.$refs.waterSpeed, 'chalk')\r\n        const initOption = {\r\n          // 设置直接坐标系坐标轴大写\r\n          grid: {\r\n            left: '3%',\r\n            top: '35%',\r\n            right: '4%',\r\n            bottom: '1%',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            // 取消间隙\r\n            type: 'category',\r\n            boundaryGap: false\r\n          },\r\n          yAxis: {\r\n\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          }\r\n        }\r\n        // 对图像进行鼠标事件的监听\r\n        this.chartInstance.on('mouseover', () => {\r\n          clearInterval(this.timerId)\r\n        })\r\n        this.chartInstance.on('mouseout', () => {\r\n          this.startIntercval()\r\n        })\r\n        this.chartInstance.setOption(initOption)\r\n      },\r\n      // 获取服务器数据\r\n      getData() {\r\n        // http://127.0.0.1.8082/api/waterSpeed\r\n        //获取数据代码\r\n        console.log('获取数据')\r\n        /*数据排序*/\r\n        // this.allData.sort((a,b)=>{\r\n        //   return a.value-b-value //从小到大排序\r\n        // })\r\n\r\n        // \r\n        // this.totalPage = this.allData.length % 5 === 0 ? this.allData.length / 5 : this.allData.length / 5 + 1 \r\n\r\n        //启动定时器 自动翻页\r\n        this.startIntercval()\r\n\r\n        this.updateChart()\r\n      },\r\n      // 更新图表\r\n      updateChart() {\r\n        // 半透明的颜色值\r\n        // const colorArr1 = [\r\n        //   'rgba(11, 168, 44, 0.5)',\r\n        //   'rgba(44, 110, 255, 0.5)',\r\n        //   'rgba(22, 242, 217, 0.5)',\r\n        //   'rgba(254, 33, 30, 0.5)',\r\n        //   'rgba(250, 105, 0, 0.5)'\r\n        // ]\r\n        // 全透明的颜色值\r\n        // const colorArr2 = [\r\n        //   'rgba(11, 168, 44, 0)',\r\n        //   'rgba(44, 110, 255, 0)',\r\n        //   'rgba(22, 242, 217, 0)',\r\n        //   'rgba(254, 33, 30, 0)',\r\n        //   'rgba(250, 105, 0, 0)'\r\n        // ]\r\n        /* 形成数组*/\r\n        // const category = this.allData.map(()=>{\r\n        //   return \r\n        // })\r\n\r\n        /*每五个元素显示一页*/\r\n        // const start = (this.currentPage-1)*5\r\n        // const end = this.currentPage * 5\r\n        // const showData = this.allData.slice(start, end)\r\n\r\n        var yData = ['100', '200', '300', '400', '600', '400', '100', '300', '900', '600']\r\n        var xData = ['3s', '2s', '1s', '4s', '5s', '3s', '2s', '1s', '4s', '5s']\r\n        /*数组排序*/\r\n        xData.sort();\r\n        /*分页*/\r\n        this.totalPage = yData % 5 === 0 ? yData.length / 5 : yData.length / 5 + 1\r\n        const start = (this.currentPage - 1) * 5\r\n        const end = this.currentPage * 5\r\n        const showyData = yData.slice(start, end)\r\n        const showxData = xData.slice(start, end)\r\n\r\n        // 图例数据 数组\r\n        // const legendArr = valueArr.map(item =>{\r\n        //   return item.name\r\n        // })\r\n\r\n        const option = {\r\n          xAxis: {\r\n            type: 'category',\r\n            data: showxData\r\n          },\r\n          yAxis: {\r\n            type: 'value',\r\n            areaStyle: {}\r\n          },\r\n          series: [{\r\n            type: this.type,\r\n            data: showyData,\r\n            smooth: true,\r\n            areaStyle: {\r\n              // 从上往下的渐变颜色\r\n              color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: '#00E2FF'\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: '#0063BF'\r\n                }\r\n              ])\r\n            },\r\n            \r\n          }],\r\n          \r\n\r\n          // legend:{\r\n          //   data:['水位变化速度']\r\n          // }\r\n        }\r\n        console.log(1)\r\n        this.chartInstance.setOption(option)\r\n        console.log(2)\r\n      },\r\n      // 翻页\r\n      startIntercval() {\r\n        if (this.timerId) {\r\n          clearInterval(this.timerId)\r\n        }\r\n        this.timerId = setInterval(() => {\r\n          this.currentPage++\r\n          if (this.currentPage >= this.totalPage) {\r\n            this.currentPage = 1\r\n          }\r\n          this.updateChart()\r\n        }, 3000)\r\n      },\r\n      // 屏幕大小适配 图标自适应\r\n      screenAdapter() {\r\n        // 得到图标容器宽度-》获取字体大小\r\n        this.titleFontSize = (this.$refs.waterSpeed.offsetWidth / 100) * 3.6\r\n        const adapterOption = {\r\n          legend: {\r\n          itemWidth: this.titleFontSize,\r\n          itemHeight: this.titleFontSize,\r\n          itemGap: this.titleFontSize,\r\n          textStyle: {\r\n            fontSize: this.titleFontSize / 2\r\n          }\r\n        }\r\n        }\r\n        this.chartInstance.setOption(adapterOption)\r\n\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.title {\r\n  position: absolute;\r\n  left: 20px;\r\n  top: 20px;\r\n  z-index: 10;\r\n  color: white;\r\n  .title-icon{\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n  }\r\n}\r\n</style>"]}]}